{"version":3,"sources":["components/Create.js","components/Read.js","components/Update.js","components/Navbar.js","App.js","index.js"],"names":["Create","fetchData","useState","firstName","setFirstName","lastName","setLastName","checkbox","setCheckbox","Form","className","Field","placeholder","onChange","e","target","value","Checkbox","label","Button","color","type","onClick","console","log","axios","post","then","Read","APIData","useEffect","style","paddingTop","Table","singleLine","Header","Row","HeaderCell","Body","map","data","Cell","to","pathname","state","id","firstNameState","lastNameState","checkboxState","delete","Update","location","useLocation","history","useHistory","checked","put","push","Navbar","exact","activeStyle","paddingRight","App","setAPIData","a","get","path","render","props","component","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.a89d1d62.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Checkbox, Form } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\n\r\nconst Create = ({ fetchData }) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [checkbox, setCheckbox] = useState(false);\r\n\r\n  const postData = () => {\r\n    console.log(firstName);\r\n    console.log(lastName);\r\n    console.log(checkbox);\r\n    axios\r\n      .post(\"https://6130665a5fc50700175f189a.mockapi.io/mockData\", {\r\n        firstName,\r\n        lastName,\r\n        checkbox,\r\n      })\r\n      .then(() => fetchData());\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    postData();\r\n  };\r\n\r\n  return (\r\n    <Form className=\"create-form\">\r\n      <Form.Field>\r\n        <label>First Name</label>\r\n        <input\r\n          placeholder=\"First Name\"\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Last Name</label>\r\n        <input\r\n          placeholder=\"Last Name\"\r\n          onChange={(e) => setLastName(e.target.value)}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <Checkbox\r\n          label=\"I agree to the Terms and Conditions\"\r\n          onChange={(e) => setCheckbox(!checkbox)}\r\n        />\r\n      </Form.Field>\r\n      <Button color=\"blue\" type=\"submit\" onClick={handleSubmit}>\r\n        Submit\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Create;\r\n","import React, { useEffect } from \"react\";\r\nimport { Table } from \"semantic-ui-react\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Read = ({ APIData, fetchData }) => {\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const deleteData = (id) => {\r\n    axios\r\n      .delete(`https://6130665a5fc50700175f189a.mockapi.io/mockData/${id}`)\r\n      .then(() => fetchData());\r\n  };\r\n\r\n  return (\r\n    <div className=\"table\" style={{ paddingTop: 20 }}>\r\n      <Table singleLine>\r\n        <Table.Header>\r\n          <Table.Row>\r\n            <Table.HeaderCell>First Name</Table.HeaderCell>\r\n            <Table.HeaderCell>Last Name</Table.HeaderCell>\r\n            <Table.HeaderCell>Checked</Table.HeaderCell>\r\n            <Table.HeaderCell>Update</Table.HeaderCell>\r\n            <Table.HeaderCell>Delete</Table.HeaderCell>\r\n          </Table.Row>\r\n        </Table.Header>\r\n        <Table.Body>\r\n          {APIData.map((data) => {\r\n            return (\r\n              <Table.Row key={data.id}>\r\n                <Table.Cell>{data.firstName}</Table.Cell>\r\n                <Table.Cell>{data.lastName}</Table.Cell>\r\n                <Table.Cell>\r\n                  {data.checkbox ? \"Checked\" : \"Unchecked\"}\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Link\r\n                    to={{\r\n                      pathname: \"/crud-v1-react/update\",\r\n                      state: {\r\n                        id: data.id,\r\n                        firstNameState: data.firstName,\r\n                        lastNameState: data.lastName,\r\n                        checkboxState: data.checkbox,\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Button color=\"green\">Update</Button>\r\n                  </Link>\r\n                </Table.Cell>\r\n                <Table.Cell>\r\n                  <Button color=\"red\" onClick={() => deleteData(data.id)}>\r\n                    Delete\r\n                  </Button>\r\n                </Table.Cell>\r\n              </Table.Row>\r\n            );\r\n          })}\r\n        </Table.Body>\r\n      </Table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Read;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button, Checkbox, Form } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useLocation } from \"react-router\";\r\n\r\nconst Update = () => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [checkbox, setCheckbox] = useState(false);\r\n\r\n  const location = useLocation();\r\n  const { id } = location.state ? location.state : \"\";\r\n\r\n  const { firstNameState } = location.state ? location.state : \"\";\r\n  const { lastNameState } = location.state ? location.state : \"\";\r\n  const { checkboxState } = location.state ? location.state : \"\";\r\n\r\n  let history = useHistory();\r\n\r\n  const updateAPIData = () => {\r\n    axios\r\n      .put(`https://6130665a5fc50700175f189a.mockapi.io/mockData/${id}`, {\r\n        firstName,\r\n        lastName,\r\n        checkbox,\r\n      })\r\n      .then(() => history.push(\"/crud-v1-react/read\"));\r\n  };\r\n\r\n  useEffect(() => {\r\n    setFirstName(firstNameState);\r\n    setLastName(lastNameState);\r\n    setCheckbox(checkboxState);\r\n  }, []);\r\n\r\n  return (\r\n    <Form className=\"create-form\">\r\n      <Form.Field>\r\n        <label>First Name</label>\r\n        <input\r\n          placeholder=\"First Name\"\r\n          onChange={(e) => setFirstName(e.target.value)}\r\n          value={firstName}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <label>Last Name</label>\r\n        <input\r\n          placeholder=\"Last Name\"\r\n          onChange={(e) => setLastName(e.target.value)}\r\n          value={lastName}\r\n        />\r\n      </Form.Field>\r\n      <Form.Field>\r\n        <Checkbox\r\n          label=\"I agree to the Terms and Conditions\"\r\n          onChange={(e) => setCheckbox(!checkbox)}\r\n          checked={checkbox}\r\n        />\r\n      </Form.Field>\r\n      <Button color=\"green\" type=\"submit\" onClick={updateAPIData}>\r\n        Update\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default Update;\r\n","import { NavLink } from \"react-router-dom\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <NavLink\r\n        exact\r\n        to=\"/crud-v1-react/read\"\r\n        activeStyle={{ color: \"red\" }}\r\n        style={{ paddingRight: 30 }}\r\n      >\r\n        Create & Read\r\n      </NavLink>\r\n      <NavLink\r\n        to=\"/crud-v1-react/update\"\r\n        activeStyle={{ color: \"red\" }}\r\n        style={{ paddingRight: 30 }}\r\n      >\r\n        Update\r\n      </NavLink>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import Create from \"./components/Create\";\nimport React, { useState } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Read from \"./components/Read\";\nimport Update from \"./components/Update\";\nimport Navbar from \"./components/Navbar\";\n\nfunction App() {\n  const [APIData, setAPIData] = useState([]);\n\n  const fetchData = async () => {\n    const data = await axios.get(\n      \"https://6130665a5fc50700175f189a.mockapi.io/mockData\"\n    );\n    setAPIData(data.data);\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <div className=\"main\">\n          <h2 className=\"main-header\">\n            <Link exact to=\"/crud-v1-react/\">\n              React Crud Operations\n            </Link>\n          </h2>\n          {/* <Switch> */}\n          <Navbar />\n          <div>\n            <Route\n              exact\n              path=\"/crud-v1-react/read\"\n              render={(props) => <Create {...props} fetchData={fetchData} />}\n            />\n          </div>\n          <div>\n            <Route\n              exact\n              path=\"/crud-v1-react/read\"\n              render={(props) => (\n                <Read {...props} APIData={APIData} fetchData={fetchData} />\n              )}\n            />\n          </div>\n          <div>\n            <Route exact path=\"/crud-v1-react/update\" component={Update} />\n          </div>\n          {/* </Switch> */}\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"semantic-ui-css/semantic.min.css\";\n\nReactDOM.render(\n  // <React.StrictMode>\n  <App />,\n  // </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}